version: 2.1

orbs:
  node: circleci/node@5

jobs:
  build-node:
    executor: node/default
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Build project
          command: npm run build
      - persist_to_workspace:
          root: .
          paths:
            - .

  docker-build:
    docker:
      - image: cimg/docker:stable
    environment:
      IMAGE_NAME: trip_togethor_image
    steps:
      - attach_workspace:
          at: .
      - setup_remote_docker:
      - run:
          name: Generate TAG from timestamp
          command: |
            echo "export TAG=$(date +%Y%m%d%H%M%S)" >> $BASH_ENV
      - run:
          name: Build Docker image with timestamp tag
          command: |
            source $BASH_ENV
            docker build -t $IMAGE_NAME:$TAG .
            echo $TAG > tag.txt
      - persist_to_workspace:
          root: .
          paths:
            - .
            - tag.txt

  deploy-to-vps:
    docker:
      - image: cimg/base:stable
    environment:
      VPS_HOST: $VPS_HOST
      VPS_USER: $VPS_USER
      VPS_PATH: $VPS_PATH
      IMAGE_NAME: trip_togethor_image
      CONTAINER_NAME: trip_togethor_container
    steps:
      - attach_workspace:
          at: .
      - setup_remote_docker:
          version: 20.10.7
      - add_ssh_keys:
          fingerprints:
            - "YOUR_SSH_KEY_FINGERPRINT"
      - run:
          name: Load TAG from file
          command: echo "export TAG=$(cat tag.txt)" >> $BASH_ENV
      - run:
          name: Save Docker image to tarball
          command: |
            source $BASH_ENV
            docker save $IMAGE_NAME:$TAG -o image.tar
      - run:
          name: Copy image.tar to VPS
          command: |
            scp -o StrictHostKeyChecking=no image.tar $VPS_USER@$VPS_HOST:$VPS_PATH
      - run:
          name: Load image and restart container on VPS
          command: |
            source $BASH_ENV
            ssh -o StrictHostKeyChecking=no $VPS_USER@$VPS_HOST \<< EOF
              cd $VPS_PATH
              docker load -i image.tar
              docker stop $CONTAINER_NAME || true
              docker rm $CONTAINER_NAME || true
              docker run -d --name $CONTAINER_NAME $IMAGE_NAME:$TAG
            EOF

workflows:
  build-and-deploy:
    jobs:
      - build-node
      - docker-build:
          requires:
            - build-node
      - deploy-to-vps:
          requires:
            - docker-build
